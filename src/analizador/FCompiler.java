package analizador;



/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


import java.awt.Color;
import java.awt.Desktop;
import java.awt.Font;
import java.awt.Image;
import java.awt.MouseInfo;
import java.awt.Point;
import java.awt.Toolkit;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.io.Reader;
import java.io.StringReader;
import java.net.URI;
import java.net.URISyntaxException;
import static java.nio.channels.DatagramChannel.open;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import java_cup.runtime.Symbol;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.text.SimpleAttributeSet;
import javax.swing.text.StyleConstants;

/**
 *
 * @author MARIELA
 */
public class FCompiler extends javax.swing.JFrame {
    int x,y,op,puntero;
    String nombreArchivo="src/analizador/code.txt",pathAbrir = "",textoSeleccionado="",code="";
    ArrayList<String> undo = new ArrayList<String>(),redo = new ArrayList<String>();
    Color color1,color2,color3,color4, cRes, cRes2, cData, cClass, cComent, cCad, cParam;
    TextLineNumber tln;
    static TSimbolos ts = new TSimbolos();
    ManejadorErrores manejadorE;
    private String textoCopiado="";
    ArrayList<String> palabras;
    ArrayList<Color> colores;
    ArrayList<Error1> manejadorErrores;
    ArrayList<entradaTS>tablaSimbolos;
    
    /**
     * Creates new form FCompiler
     */
    public FCompiler() {
        this.setUndecorated(true);
        initComponents();
        this.setLocationRelativeTo(null);
        //Se invoca al m√©todo generarLex que genera la clase AnalizadorLexico desde el archivo alexico.flex
        generarLex();
        
        tablaSimbolos = new ArrayList<entradaTS>();
        manejadorErrores = new ArrayList<Error1>();
        
        setIconImage(new ImageIcon(getClass().getResource("../imagenes/brillabrillacomodiamantenelcielo.png")).getImage());
        manejadorE=new ManejadorErrores();
        
        jTextPane_Code.setCaretPosition(0);
        //jTextPane_Tokens.setCaretPosition(0);
        
        palabras = new ArrayList<String>();
        colores = new ArrayList<Color>();

        color1 = new Color(41,85,72); //color
        color2 = new Color (58,121,104);
        color3 = new Color (255,255,255);
        op = 1;
        tln = new TextLineNumber(jTextPane_Code);
        jScrollPane1.setRowHeaderView(tln);
        
        cRes = new Color(249,38,114);
        cRes2 = new Color(174,129,188);
        cData = new Color(72,192,239);
        cClass = new Color(103, 223, 116);
        cComent = new Color(104,113,94);
        cCad = new Color(230,219,116);
        cParam = new Color(253,151,32);
     
        buscar(jTextPane_Code.getText().toUpperCase());
         
        undo.add(jTextPane_Code.getText());
        
    }
    
    public void generarLex(){
        //Ruta del archivo alexico.flex
        //String path="C:/Users/mytur/Documents/NetBeansProjects/GPlusCompiler/src/analizadorlex/alexico.flex";
        File JF = new File ("src/analizador/alexico.flex");
        File file = new File(JF.getAbsolutePath()+"");
        
        //File file=new File(path);
        jflex.Main.generate(file);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        tituloPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPane_Code = new javax.swing.JTextPane();
        cintaPanel = new javax.swing.JPanel();
        item5 = new javax.swing.JLabel();
        item1 = new javax.swing.JLabel();
        item2 = new javax.swing.JLabel();
        item3 = new javax.swing.JLabel();
        item4 = new javax.swing.JLabel();
        item6 = new javax.swing.JLabel();
        cintillaPanel = new javax.swing.JPanel();
        filePanel = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        editPanel = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        compilePanel = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        appearPanel = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        helpPanel = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        outPanel = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        out2Panel = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextPane_Output = new javax.swing.JTextPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(null);

        tituloPanel.setBackground(new java.awt.Color(41, 85, 72));
        tituloPanel.setForeground(new java.awt.Color(51, 51, 51));
        tituloPanel.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                tituloPanelMouseDragged(evt);
            }
        });
        tituloPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tituloPanelMousePressed(evt);
            }
        });
        tituloPanel.setLayout(null);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/cruz.png"))); // NOI18N
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel1MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel1MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLabel1MouseReleased(evt);
            }
        });
        tituloPanel.add(jLabel1);
        jLabel1.setBounds(1050, 0, 47, 33);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/minimizar.png"))); // NOI18N
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel2MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel2MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLabel2MouseReleased(evt);
            }
        });
        tituloPanel.add(jLabel2);
        jLabel2.setBounds(1000, 0, 47, 33);

        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/brillabrillacomodiamantenelcielo.png"))); // NOI18N
        tituloPanel.add(jLabel15);
        jLabel15.setBounds(10, 0, 30, 30);

        jLabel14.setFont(new java.awt.Font("Caviar Dreams", 0, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(236, 236, 236));
        jLabel14.setText("GPlus Compiler");
        jLabel14.setToolTipText("");
        tituloPanel.add(jLabel14);
        jLabel14.setBounds(40, 0, 120, 30);

        jLabel8.setForeground(new java.awt.Color(204, 204, 204));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText(" ");
        tituloPanel.add(jLabel8);
        jLabel8.setBounds(140, 10, 840, 14);

        jPanel1.add(tituloPanel);
        tituloPanel.setBounds(0, 0, 1097, 40);

        jTextPane_Code.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jTextPane_Code.setText("DECLARE {\n\tINT IDI1;\n\tSTRING IDS1;\n\tSTRING IDS2;\n\tBOOLEAN IDB1 ;\n}\n\nMAIN {\n\tIDS1 = \"HOLA\";\n\tIDS2 = \" MUNDO\";\n\tIDS1 = IDS1 + IDS2;\n\tARRAYSTRING ID5 = NEW [ \"h\",\"DDF\"] ;\n\tFEATURES ID4 = NEW FEATURES ( 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21) ;\n\tGROUP ID2 = NEW GROUP (ID4, MAX, ID5);\n\tNODE S = NEW NODE (ID4,\"neTO\",\"D\");\n\tNODE id = NEW NODE (ID4,\"neTO\",\"D\");\n\tNODE id1 = NEW NODE (ID4,\"neTO\",\"D\");\n\tGETFEATURES (S.ANXIETY);\n               GETSIMILITUDE (ID,ID1);\n               PRINTGRAPH (ID2);\n\tGENERATEGROUP (ID2);\n\tPRINTLN (\"A\");\n}");
        jTextPane_Code.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextPane_CodeKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jTextPane_Code);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(10, 160, 1060, 360);

        cintaPanel.setBackground(new java.awt.Color(58, 121, 104));
        cintaPanel.setLayout(null);

        item5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/trans.png"))); // NOI18N
        item5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                item5MouseClicked(evt);
            }
        });
        cintaPanel.add(item5);
        item5.setBounds(300, 10, 70, 60);

        item1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/new.png"))); // NOI18N
        item1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                item1MouseClicked(evt);
            }
        });
        cintaPanel.add(item1);
        item1.setBounds(10, 10, 70, 60);

        item2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/open.png"))); // NOI18N
        item2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                item2MouseClicked(evt);
            }
        });
        cintaPanel.add(item2);
        item2.setBounds(80, 10, 70, 60);

        item3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/saveas.png"))); // NOI18N
        item3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                item3MouseClicked(evt);
            }
        });
        cintaPanel.add(item3);
        item3.setBounds(150, 10, 70, 60);

        item4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/save.png"))); // NOI18N
        item4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                item4MouseClicked(evt);
            }
        });
        cintaPanel.add(item4);
        item4.setBounds(230, 10, 70, 60);

        item6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/trans.png"))); // NOI18N
        item6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                item6MouseClicked(evt);
            }
        });
        cintaPanel.add(item6);
        item6.setBounds(370, 10, 70, 60);

        jPanel1.add(cintaPanel);
        cintaPanel.setBounds(0, 70, 1100, 80);

        cintillaPanel.setBackground(new java.awt.Color(41, 85, 72));
        cintillaPanel.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                cintillaPanelMouseDragged(evt);
            }
        });
        cintillaPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                cintillaPanelMousePressed(evt);
            }
        });
        cintillaPanel.setLayout(null);

        filePanel.setBackground(new java.awt.Color(58, 121, 104));
        filePanel.setLayout(null);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/file.png"))); // NOI18N
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });
        filePanel.add(jLabel3);
        jLabel3.setBounds(0, 0, 90, 30);

        cintillaPanel.add(filePanel);
        filePanel.setBounds(0, 0, 90, 30);

        editPanel.setBackground(new java.awt.Color(41, 85, 72));
        editPanel.setLayout(null);

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/edit.png"))); // NOI18N
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel4MouseClicked(evt);
            }
        });
        editPanel.add(jLabel4);
        jLabel4.setBounds(0, 0, 90, 30);

        cintillaPanel.add(editPanel);
        editPanel.setBounds(90, 0, 90, 30);

        compilePanel.setBackground(new java.awt.Color(41, 85, 72));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/compile.png"))); // NOI18N
        jLabel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel5MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout compilePanelLayout = new javax.swing.GroupLayout(compilePanel);
        compilePanel.setLayout(compilePanelLayout);
        compilePanelLayout.setHorizontalGroup(
            compilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        compilePanelLayout.setVerticalGroup(
            compilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        cintillaPanel.add(compilePanel);
        compilePanel.setBounds(180, 0, 90, 30);

        appearPanel.setBackground(new java.awt.Color(41, 85, 72));
        appearPanel.setLayout(null);

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/appear.png"))); // NOI18N
        jLabel6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel6MouseClicked(evt);
            }
        });
        appearPanel.add(jLabel6);
        jLabel6.setBounds(5, 0, 95, 30);

        cintillaPanel.add(appearPanel);
        appearPanel.setBounds(270, 0, 100, 30);

        helpPanel.setBackground(new java.awt.Color(41, 85, 72));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/help.png"))); // NOI18N
        jLabel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel7MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout helpPanelLayout = new javax.swing.GroupLayout(helpPanel);
        helpPanel.setLayout(helpPanelLayout);
        helpPanelLayout.setHorizontalGroup(
            helpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
        );
        helpPanelLayout.setVerticalGroup(
            helpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
        );

        cintillaPanel.add(helpPanel);
        helpPanel.setBounds(370, 0, 100, 30);

        jPanel1.add(cintillaPanel);
        cintillaPanel.setBounds(0, 40, 1100, 30);

        outPanel.setBackground(new java.awt.Color(58, 121, 104));

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/text.png"))); // NOI18N

        javax.swing.GroupLayout outPanelLayout = new javax.swing.GroupLayout(outPanel);
        outPanel.setLayout(outPanelLayout);
        outPanelLayout.setHorizontalGroup(
            outPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        outPanelLayout.setVerticalGroup(
            outPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(outPanelLayout.createSequentialGroup()
                .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel1.add(outPanel);
        outPanel.setBounds(20, 530, 100, 30);

        out2Panel.setBackground(new java.awt.Color(58, 121, 104));

        jTextPane_Output.setEditable(false);
        jTextPane_Output.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jTextPane_Output.setForeground(new java.awt.Color(204, 0, 51));
        jTextPane_Output.setFocusable(false);
        jScrollPane3.setViewportView(jTextPane_Output);

        javax.swing.GroupLayout out2PanelLayout = new javax.swing.GroupLayout(out2Panel);
        out2Panel.setLayout(out2PanelLayout);
        out2PanelLayout.setHorizontalGroup(
            out2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(out2PanelLayout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 1060, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        out2PanelLayout.setVerticalGroup(
            out2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, out2PanelLayout.createSequentialGroup()
                .addGap(0, 10, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel1.add(out2Panel);
        out2Panel.setBounds(10, 550, 1060, 130);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1097, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 700, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        System.exit(0);
    }//GEN-LAST:event_jLabel1MouseClicked

    private void jLabel1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseEntered
         jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/cruz2.png")));
    }//GEN-LAST:event_jLabel1MouseEntered

    private void jLabel1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseExited
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/cruz.png")));
    }//GEN-LAST:event_jLabel1MouseExited

    private void jLabel1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MousePressed
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/cruz.png")));
    }//GEN-LAST:event_jLabel1MousePressed

    private void jLabel1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseReleased
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/cruz2.png")));
    }//GEN-LAST:event_jLabel1MouseReleased

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        this.setExtendedState(ICONIFIED);
    }//GEN-LAST:event_jLabel2MouseClicked

    private void jLabel2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseEntered
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/minimizar2.png")));
    }//GEN-LAST:event_jLabel2MouseEntered

    private void jLabel2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseExited
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/minimizar.png")));
    }//GEN-LAST:event_jLabel2MouseExited

    private void jLabel2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MousePressed
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/minimizar.png")));
    }//GEN-LAST:event_jLabel2MousePressed

    private void jLabel2MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseReleased
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/minimizar2.png")));
    }//GEN-LAST:event_jLabel2MouseReleased

    private void tituloPanelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tituloPanelMousePressed
        x=evt.getX();
        y=evt.getY();
    }//GEN-LAST:event_tituloPanelMousePressed

    private void tituloPanelMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tituloPanelMouseDragged
        Point p = MouseInfo.getPointerInfo().getLocation();
        this.setLocation(p.x-x,p.y-y);
    }//GEN-LAST:event_tituloPanelMouseDragged

    private void cintillaPanelMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cintillaPanelMouseDragged
        Point p = MouseInfo.getPointerInfo().getLocation();
        this.setLocation(p.x-x,p.y-y);
    }//GEN-LAST:event_cintillaPanelMouseDragged

    private void cintillaPanelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cintillaPanelMousePressed
        x=evt.getX();
        y=evt.getY();
    }//GEN-LAST:event_cintillaPanelMousePressed

    private void jLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseClicked
        op = 2;
        
        filePanel.setBackground(color1);
        editPanel.setBackground(color2);
        compilePanel.setBackground(color1);
        appearPanel.setBackground(color1);
        helpPanel.setBackground(color1);
        
        item1.setIcon(new ImageIcon( getClass().getResource("/undo.png"))); 
        item2.setIcon(new ImageIcon( getClass().getResource("/redo.png"))); 
        item4.setIcon(new ImageIcon( getClass().getResource("/cut.png"))); 
        item3.setIcon(new ImageIcon( getClass().getResource("/copy.png"))); 
        item5.setIcon(new ImageIcon( getClass().getResource("/paste.png"))); 
        item6.setIcon(new ImageIcon( getClass().getResource("/trans.png"))); 
        
        
    }//GEN-LAST:event_jLabel4MouseClicked

    private void jLabel5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MouseClicked
        op = 3 ;
        
        filePanel.setBackground(color1);
        editPanel.setBackground(color1);
        compilePanel.setBackground(color2);
        appearPanel.setBackground(color1);
        helpPanel.setBackground(color1);
        
        item1.setIcon(new ImageIcon( getClass().getResource("/run.png"))); 
        item2.setIcon(new ImageIcon( getClass().getResource("/trans.png"))); 
        item3.setIcon(new ImageIcon( getClass().getResource("/trans.png"))); 
        item4.setIcon(new ImageIcon( getClass().getResource("/trans.png"))); 
        item5.setIcon(new ImageIcon( getClass().getResource("/trans.png"))); 
        item6.setIcon(new ImageIcon( getClass().getResource("/trans.png"))); 
    }//GEN-LAST:event_jLabel5MouseClicked

    private void jLabel6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel6MouseClicked
        op = 4;
        
        filePanel.setBackground(color1);
        editPanel.setBackground(color1);
        compilePanel.setBackground(color1);
        appearPanel.setBackground(color2);
        helpPanel.setBackground(color1);
        
        item1.setIcon(new ImageIcon( getClass().getResource("/tema1.png"))); 
        item2.setIcon(new ImageIcon( getClass().getResource("/tema2.png"))); 
        item3.setIcon(new ImageIcon( getClass().getResource("/tema3.png"))); 
        item4.setIcon(new ImageIcon( getClass().getResource("/tema4.png"))); 
        item5.setIcon(new ImageIcon( getClass().getResource("/tema5.png"))); 
        item6.setIcon(new ImageIcon( getClass().getResource("/run.png"))); 
    }//GEN-LAST:event_jLabel6MouseClicked

    private void jLabel7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7MouseClicked
        op = 5;
        
        filePanel.setBackground(color1);
        editPanel.setBackground(color1);
        compilePanel.setBackground(color1);
        appearPanel.setBackground(color1);
        helpPanel.setBackground(color2);
        
        item1.setIcon(new ImageIcon( getClass().getResource("/about.png"))); 
        item2.setIcon(new ImageIcon( getClass().getResource("/help1.png"))); 
        item3.setIcon(new ImageIcon( getClass().getResource("/trans.png"))); 
        item4.setIcon(new ImageIcon( getClass().getResource("/trans.png"))); 
        item5.setIcon(new ImageIcon( getClass().getResource("/trans.png")));
        item6.setIcon(new ImageIcon( getClass().getResource("/trans.png"))); 
    }//GEN-LAST:event_jLabel7MouseClicked

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        op = 1;
        
        filePanel.setBackground(color2);
        editPanel.setBackground(color1);
        compilePanel.setBackground(color1);
        appearPanel.setBackground(color1);
        helpPanel.setBackground(color1);
        
        item1.setIcon(new ImageIcon( getClass().getResource("/new.png"))); 
        item2.setIcon(new ImageIcon( getClass().getResource("/open.png"))); 
        item4.setIcon(new ImageIcon( getClass().getResource("/save.png"))); 
        item3.setIcon(new ImageIcon( getClass().getResource("/saveas.png"))); 
        item5.setIcon(new ImageIcon( getClass().getResource("/trans.png"))); 
        item6.setIcon(new ImageIcon( getClass().getResource("/trans.png")));         
    }//GEN-LAST:event_jLabel3MouseClicked

    private void item5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_item5MouseClicked
        switch(op){
            case 1: 
                break;
            case 2:
                int inicio =jTextPane_Code.getSelectionStart();
                String inicioText = jTextPane_Code.getText().substring(0, inicio);
                String finText = jTextPane_Code.getText().substring(inicio);
                String res = inicioText+textoCopiado+finText;
                int caretPos = jTextPane_Code.getCaretPosition();
                jTextPane_Code.setText(res);
                jTextPane_Code.setCaretPosition(caretPos+textoCopiado.length());
                break;
            case 3:
                break;
            case 4:
                color1 = new Color(230,47,75);
                color2 = new Color (255,127,105);
                color3 = new Color (241,246,246);
                color4 = Color.WHITE;
                filePanel.setBackground(color1);
                editPanel.setBackground(color1);
                compilePanel.setBackground(color1);
                appearPanel.setBackground(color2);
                helpPanel.setBackground(color1);

                cintillaPanel.setBackground(color1);
                tituloPanel.setBackground(color1);
                cintaPanel.setBackground(color2);
                outPanel.setBackground(color2);
                out2Panel.setBackground(color2);
                jScrollPane3.setBackground(color2);
                
                tln.setBackground(color1);
                tln.setForeground(Color.DARK_GRAY);
                tln.setCurrentLineForeground(color4);
                jScrollPane1.setRowHeaderView(tln);
                //jPanel1.setBackground(color3);
                break;
            case 5:
                               
                break;     
        }
    }//GEN-LAST:event_item5MouseClicked

    private void item1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_item1MouseClicked
        
        switch(op){
            case 1: 
                nuevo();
                break;
            case 2:
                System.out.print(undo.size());
                if(undo.size()>1){
                    
                    redo.add(undo.get(undo.size()-1));
                    undo.remove(undo.size()-1); 
                    int i = jTextPane_Code.getCaretPosition();
                    jTextPane_Code.setText(undo.get(undo.size()-1));
                    jTextPane_Code.setCaretPosition(i);
                    
                    buscar(jTextPane_Code.getText().toUpperCase());  
                }
                break;
            case 3:
                jTextPane_Output.setText("");
//                jTextPane_Tokens.setText("");

                if(!manejadorE.empty()){
                    manejadorE.clear();
                }
                

                try {
                    analizar();
                    
                }catch (IOException ex) {
                    Logger.getLogger(FCompiler.class.getName()).log(Level.SEVERE, null, ex);
                }
                break;
            case 4:
                color1 = new Color(19,19,19);
                color4 = Color.WHITE;
                color2 = new Color (202,32,33);

                filePanel.setBackground(color1);
                editPanel.setBackground(color1);
                compilePanel.setBackground(color1);
                appearPanel.setBackground(color2);
                helpPanel.setBackground(color1);

                cintillaPanel.setBackground(color1);
                tituloPanel.setBackground(color1);
                cintaPanel.setBackground(color2);
                outPanel.setBackground(color2);
                out2Panel.setBackground(color2);
                jScrollPane3.setBackground(color2);
                
                tln.setBackground(color1);
                tln.setForeground(Color.gray);
                jScrollPane1.setRowHeaderView(tln);
                tln.setCurrentLineForeground(color4);
                break;
            case 5:
                AcercaD v = new AcercaD(this,true);
                v.setVisible(true);
                break;     
        }
        
    }//GEN-LAST:event_item1MouseClicked

    private void item2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_item2MouseClicked
        switch(op){
            case 1: 
                try {
                    abrir();
                } catch (IOException ex) {
                    Logger.getLogger(FCompiler.class.getName()).log(Level.SEVERE, null, ex);
                }
                break;
            case 2:
                if(redo.size()>1){
                    
                    undo.add(redo.get(redo.size()-1));
                    redo.remove(redo.size()-1); 
                    int i = jTextPane_Code.getCaretPosition();
                    jTextPane_Code.setText(redo.get(redo.size()-1));
                    jTextPane_Code.setCaretPosition(i);
                    
                    buscar(jTextPane_Code.getText().toUpperCase());  
                }
                break;
            case 3:
                break;
            case 4:
                color1 = new Color(41,53,65);
                color4 = Color.WHITE;
                color2 = new Color (250,98,92);

                filePanel.setBackground(color1);
                editPanel.setBackground(color1);
                compilePanel.setBackground(color1);
                appearPanel.setBackground(color2);
                helpPanel.setBackground(color1);

                cintillaPanel.setBackground(color1);
                tituloPanel.setBackground(color1);
                cintaPanel.setBackground(color2);
                outPanel.setBackground(color2);
                out2Panel.setBackground(color2);
                jScrollPane3.setBackground(color2);
                
                tln.setBackground(color1);
                tln.setForeground(Color.gray);
                tln.setCurrentLineForeground(color4);
                jScrollPane1.setRowHeaderView(tln);
                break;
            case 5: enlace("http://gplus1.esy.es");
                break;     
        }
        
    }//GEN-LAST:event_item2MouseClicked

    public void enlace (String enlaceAAceder){
        Desktop enlace=Desktop.getDesktop();
        try {
                enlace.browse(new URI(enlaceAAceder));
        } catch (IOException | URISyntaxException e) {
            e.getMessage();
        }
    }
    private void item3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_item3MouseClicked
        switch(op){
            case 1: 
                guardarArchivo(jTextPane_Code);
                break;
            case 2:
                int inicio= jTextPane_Code.getSelectionStart();
                int fin = jTextPane_Code.getSelectionEnd();
                String s = jTextPane_Code.getText();
                textoCopiado = s.substring( inicio , fin );
                break;
            case 3: System.out.println(jTextPane_Code.getCaretPosition()    );
                break;
            case 4:
                color1 = new Color(41,85,72);
                color2 = new Color (58,121,104);
                color4 = Color.white;

                filePanel.setBackground(color1);
                editPanel.setBackground(color1);
                compilePanel.setBackground(color1);
                appearPanel.setBackground(color2);
                helpPanel.setBackground(color1);

                cintillaPanel.setBackground(color1);
                tituloPanel.setBackground(color1);
                cintaPanel.setBackground(color2);
                outPanel.setBackground(color2);
                out2Panel.setBackground(color2);
                jScrollPane3.setBackground(color2);
                
                tln.setBackground(color1);
                tln.setForeground(Color.gray);
                tln.setCurrentLineForeground(color4);
                jScrollPane1.setRowHeaderView(tln);
                
                break;
            case 5:
                break;     
        }
    }//GEN-LAST:event_item3MouseClicked

    private void item4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_item4MouseClicked
        switch(op){
            case 1: 
                sobrescribirArchivo(jTextPane_Code);
                break;
            case 2: 
                int inicio = jTextPane_Code.getSelectionStart();
                int fin = jTextPane_Code.getSelectionEnd();
                String s = jTextPane_Code.getText();
                textoCopiado = s.substring( inicio , fin );
                String inicioText = jTextPane_Code.getText().substring(0, inicio);
                String finText = jTextPane_Code.getText().substring(fin, jTextPane_Code.getText().length());
                int caretPos = jTextPane_Code.getCaretPosition();
                jTextPane_Code.setText(inicioText+finText);
                 jTextPane_Code.setCaretPosition(caretPos-textoCopiado.length());
                break;
            case 3:
                break;
            case 4:
                color1 = new Color(69,110,141);
                color2 = new Color (254,185,66);
                color4 = Color.WHITE;

                filePanel.setBackground(color1);
                editPanel.setBackground(color1);
                compilePanel.setBackground(color1);
                appearPanel.setBackground(color2);
                helpPanel.setBackground(color1);

                cintillaPanel.setBackground(color1);
                tituloPanel.setBackground(color1);
                cintaPanel.setBackground(color2);
                outPanel.setBackground(color2);
                out2Panel.setBackground(color2);
                jScrollPane3.setBackground(color2);
                
                tln.setBackground(color1);
                tln.setForeground(Color.DARK_GRAY);
                tln.setCurrentLineForeground(color4);
                jScrollPane1.setRowHeaderView(tln);
                break;
            case 5:
                break;   
                     
        }
    }//GEN-LAST:event_item4MouseClicked

    private void jTextPane_CodeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextPane_CodeKeyReleased
        
        redo.removeAll(redo);
        
        undo.add(jTextPane_Code.getText());
        
        buscar(jTextPane_Code.getText().toUpperCase());    
    }//GEN-LAST:event_jTextPane_CodeKeyReleased

    private void item6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_item6MouseClicked
        
        switch(op){
            case 1: 
                break;
            case 2: 
                break;
            case 3:
                break;
            case 4:
                ElegirColor v = new ElegirColor(this, true);
                v.setVisible(true);
                break;
            case 5:
                break;   
        }
    }//GEN-LAST:event_item6MouseClicked
    
    
    /**************** MENU EDITAR*************************/
    //Guardar
    public  void guardar() {
        //Este m√©todo sirve para guardar el c√≥digo que se encuentra en el JPanel_Code
             String codigo=jTextPane_Code.getText();
             //Convertimos el codigo a may√∫scula para que est√© uniforme
             codigo=codigo;
             System.out.println(codigo);
            
            //Se guarda el codigo en el archivo code.txt
            File archivo = new File(nombreArchivo);
            try {
                FileWriter salida = new FileWriter(archivo);
                BufferedWriter bw = new BufferedWriter(salida);
                bw.write(codigo);
                bw.close();
            }
        catch(IOException e) {
            JOptionPane.showMessageDialog(null, "Error saving.");
            }      
    }
    
    //Guardar
    public void sobrescribirArchivo(JTextPane panell){
        //Checo si hay algun archivo abierto, o si no a guardado el archivo actual que esta siendo usado
        //para uso uso la variable pathAbrir ya que ese tendra el ultimo path 
        if(pathAbrir.equals("")){
         guardarArchivo(panell);
       }
       else{
       
       FileWriter fw;
            try
            {
                  fw= new FileWriter(pathAbrir);
            }
            catch(IOException io)
            {
                  System.out.println("Error opening file");
                  return;
            }
 
            //Escribimos
            try
            {
                  fw.write(panell.getText());
                  JOptionPane.showMessageDialog(null,"Saved successfully", "Save", JOptionPane.INFORMATION_MESSAGE);
          
            }
 
            catch(IOException io)
            {
                  JOptionPane.showMessageDialog(null,"¬°Error saving!", "¬°Error!", JOptionPane.ERROR_MESSAGE);
            }
 
            //cerramos el fichero
            try
            {
                  fw.close();
            }
 
            catch(IOException io)
            {
                 JOptionPane.showMessageDialog(null,"¬°Error closing file!", "¬°Error!", JOptionPane.ERROR_MESSAGE);
            }  
       
       }
    }
    
    //Guardar Archivo
    
    public void guardarArchivo(JTextPane panell){
          
        String texto = panell.getText();
            JFileChooser fileChooser = new JFileChooser();
            fileChooser.addChoosableFileFilter(new FileNameExtensionFilter("All files *.gp", "gp","gp"));
            int seleccion = fileChooser.showSaveDialog(null);
            try{
                if (seleccion == JFileChooser.APPROVE_OPTION){
                    File JFC = fileChooser.getSelectedFile();
                    String PATH = JFC.getAbsolutePath();
                    pathAbrir=PATH+".gp";
                    
                    jLabel8.setText(JFC.getAbsoluteFile().getName()+".gp");
                    
                    
                    PrintWriter printwriter = new PrintWriter(JFC);
                    printwriter.print(panell.getText());
                    printwriter.close();
                    if(!(PATH.endsWith(".gp"))){
                        File temp = new File(PATH+".gp");
                        JFC.renameTo(temp);
                    }
                    JOptionPane.showMessageDialog(null,"Saved successfully", "Save", JOptionPane.INFORMATION_MESSAGE);
                }
            }catch (Exception e){
                JOptionPane.showMessageDialog(null,"¬°Error saving!", "¬°Error!", JOptionPane.ERROR_MESSAGE);
            }
    }
    public void CambiarC(){
                filePanel.setBackground(color1);
                editPanel.setBackground(color1);
                compilePanel.setBackground(color1);
                appearPanel.setBackground(color2);
                helpPanel.setBackground(color1);

                cintillaPanel.setBackground(color1);
                tituloPanel.setBackground(color1);
                cintaPanel.setBackground(color2);
                outPanel.setBackground(color2);
                out2Panel.setBackground(color2);
                jScrollPane3.setBackground(color2);
                
                tln.setBackground(color1);
                tln.setForeground(color3);
                tln.setCurrentLineForeground(color4);
                jScrollPane1.setRowHeaderView(tln);
    }
    //Abrir documento
    public void abrir() throws IOException {
      String textu="";
        JFileChooser JFC = new JFileChooser();
        JFC.setFileFilter(new FileNameExtensionFilter("All files *.gp", "gp","gp"));
        int abrir = JFC.showDialog(null, "Open");
        if (abrir == JFileChooser.APPROVE_OPTION) {
            FileReader FR = null;
            BufferedReader BR = null;
            try {
                File archivo = JFC.getSelectedFile();
                
                jLabel8.setText(archivo.getName());
                
                String PATH = JFC.getSelectedFile().getAbsolutePath();
                if(PATH.endsWith(".gp")||PATH.endsWith(".gp")){
                    FR = new FileReader(archivo);
                    BR = new BufferedReader(FR);
                    String linea;
                    if(pathAbrir.compareTo(archivo.getAbsolutePath())==0){
                        JOptionPane.showMessageDialog(this, "File opened","Error", JOptionPane.ERROR_MESSAGE);
                    }else{
                        pathAbrir = archivo.getAbsolutePath();
                        
                        jTextPane_Code.setText(null);
                        while((linea=BR.readLine())!=null){
                            textu=textu+linea+"\n";
                            jTextPane_Code.setText(linea+"\n");
                        }
                        jTextPane_Code.setText(textu);
                    }
                    
                }else{
                    JOptionPane.showMessageDialog(this, "Not supported file","Error", JOptionPane.ERROR_MESSAGE);
                    open();
                }

            } catch (FileNotFoundException ex) {
                ex.printStackTrace();
                //Logger.getLogger(fileChooser.class.getName()).log(Level.SEVERE, null, ex);
            //cerramos el fichero, para asegurar que se cierra tanto
            // si todo va bien si salta una excepcion
            } finally {
                try {
                    if(null!= FR){
                        FR.close();
                    }

                } catch (IOException ex) {
                    ex.printStackTrace();
                 //   Logger.getLogger(fileChooser.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        
    }
    
    //Nuevo documento
    public void nuevo(){
            Object[] options = { "Continue", "Cancel" };
            int n= JOptionPane.showOptionDialog(null, "Are you sure you want to create a new file.\n Unsaved information will be lost", "Warning",
            JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE,
            null, options, options[0]);
            if(n ==  0){
                jTextPane_Output.setText("");
                jTextPane_Code.setText("/*Developed in G+ Compiler*/\n\nDECLARE {\n\t/*TODO DECLARE*/\n}\n\nMAIN {\n\t/*TODO MAIN*/\n}");
//                jTextPane_Tokens.setText("");
                pathAbrir="";
                jLabel8.setText("");
            }
            buscar(jTextPane_Code.getText().toUpperCase()); 
    }
    
    //Analizar
    public void analizar() throws IOException{
        jTextPane_Output.setText("");
        jTextPane_Output.setForeground(new Color(204,0,51));
        
        tablaSimbolos.clear();
        manejadorErrores.clear();
        ts.ts=new ArrayList<TSDatos>();
        
        int c=0;
        code=jTextPane_Code.getText().toUpperCase();
        String cad="";
        if((jTextPane_Code.getText()).length()>=1){
            try {
                analizarCodigo();
                sintactico();
                System.out.println("Tama√±o manejador errores: "+manejadorErrores.size());
                if(manejadorErrores.size()==0){
                    jTextPane_Output.setForeground(new Color(102,123,57));
                    jTextPane_Output.setText("BUILD SUCCESSFUL");
                }else{
                    String merrores=mostrarManejadorErrores();
                    jTextPane_Output.setText(jTextPane_Output.getText()+merrores);
                }
                
                /*if (mostrarManejadorErrores().equals("")) {
                    jTextPane_Output.setForeground(new Color(102,123,57));
                    jTextPane_Output.setText("BUILD SUCCESSFUL");
                    jTextPane_Output.setForeground(new Color(204,0,51));
                }*/
            } catch (Exception ex) {
                Logger.getLogger(FCompiler.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else{
            jTextPane_Output.setForeground(new Color(221,140,32));
            jTextPane_Output.setText("NO CODE TO COMPILE");
        }
        
        
    }   
    
    public void analizarCodigo() throws Exception {
        AnalizadorLexico flex=new AnalizadorLexico(new StringReader(code));
        /*Yytoken token = null;
        do {
            token = flex.nextToken();
            if(token != null){
                if(token.getType().startsWith("ERRORLEX")){
                    Error1 e=new Error1("lexico",token.getLine(),token.getColumn(),token.getToken());
                    manejadorE.anadirError(e);
                }else{
                    c++;
                    cad=cad+"TKN #"+c+" < "+token.getToken()+" , "+token.getType()+" >\n";
                }
                //System.out.println(token);
            }
            
        } while (token != null);
        jTextPane_Output.setText(manejadorE.mostrarErrores());
        if(manejadorE.empty()){
            jTextPane_Output.setText("BUILD SUCCESSFUL");
            jTextPane_Output.setForeground(new Color(24,126,55));
        }*/
         
       Symbol comp_lexico = flex.next_token();//separa por lexema

       while(comp_lexico.sym!=0){
            comp_lexico = flex.next_token();
        }
       if(!flex.TablaSimbolos.isEmpty()){
        this.tablaSimbolos.addAll(flex.TablaSimbolos);
        
       }
       if(!flex.ManejadorDeErrores.isEmpty()){
        this.manejadorErrores.addAll(flex.ManejadorDeErrores);
       }
    }
    
    public void sintactico(){
        AnalizadorLexico flex=new AnalizadorLexico(new StringReader(code));
        
        Asintactico parser;
        ArrayList<Error1> m = new ArrayList<Error1>();
        //m.add(new errorsin("Prueba",1,2,"a√±sdhfoiasdhf"));
        parser=new Asintactico(flex,m);
        try {
            parser.parse();
        } catch (Exception ex) {
            Logger.getLogger(FCompiler.class.getName()).log(Level.SEVERE, null, ex);
        }
        if(!parser.ManejadorDeErrores.isEmpty()){
            System.out.println(parser.ManejadorDeErrores.get(0).toString());
        this.manejadorErrores.addAll(parser.ManejadorDeErrores);
        }
    }
    
    public String mostrarManejadorErrores(){
        String errores="";
        for(int i =0;i<manejadorErrores.size();i++)
        {
            String error =(manejadorErrores.get(i).toString()+"\n");
            if(!error.equals("\n")){
           // if(error.split("#").length!=2){
                errores+=error;
            //}else{
              //      if (ts.buscar(error.split("#")[1].substring(1, error.split("#")[1].length()-2)) == null){
                //        errores+=error.split("#")[0]+error.split("#")[1];
                //}
            //}
            }
        }
        return errores;
    }
    
    //Colorear palabras
    public void buscar(String cadena){ 
        a√±adirPalabras();
        
        int posicion = cadena.indexOf("/*");
        while(posicion >= 0){
            if(cadena.indexOf("/*", posicion) <= cadena.indexOf("*/", posicion+2)){
                
                palabras.add(cadena.substring(cadena.indexOf("/*",posicion), cadena.indexOf("*/",posicion+2)+2));
                System.out.println(cadena.substring(cadena.indexOf("/*",posicion), cadena.indexOf("*/",posicion+2)+2));
            }else {
                palabras.add(cadena.substring(cadena.indexOf("/*",posicion)));
                System.out.println(cadena.substring(cadena.indexOf("/*",posicion)));
            }
            colores.add(new Color(104,113,94));
            posicion = cadena.indexOf("/*", posicion+1);
        }
         
        ArrayList<ArrayList<String>> palabrasColor = new ArrayList<ArrayList<String>>();
        for(int i=0; i<palabras.size();i++){
            palabrasColor.add(new ArrayList<String>());
            if(palabras.get(i).contains("/*")) {
                //Comentarios
                palabrasColor.get(palabrasColor.size()-1).add(""+palabras.get(i)+"");
             
            } 
            else {
                palabrasColor.get(palabrasColor.size()-1).add(""+palabras.get(i)+" ");//Primera palabra
                palabrasColor.get(palabrasColor.size()-1).add(" "+palabras.get(i)+" ");
                palabrasColor.get(palabrasColor.size()-1).add(" "+palabras.get(i)+"\n");
                palabrasColor.get(palabrasColor.size()-1).add("\n"+palabras.get(i)+" ");
                palabrasColor.get(palabrasColor.size()-1).add("\n"+palabras.get(i)+"\n");
            }
        }
        
        
        
             
        SimpleAttributeSet clean = new SimpleAttributeSet();
        jTextPane_Code.getStyledDocument().setCharacterAttributes(0, jTextPane_Code.getText().length(), clean, true);
        
        for(int i=0; i<palabrasColor.size();i++){
            for(int y=0; y<palabrasColor.get(i).size();y++){
                int index = cadena.indexOf(palabrasColor.get(i).get(y));

                while (index >= 0) {
                    
                    SimpleAttributeSet set = new SimpleAttributeSet();
                    StyleConstants.setForeground(set,colores.get(i));
                    jTextPane_Code.getStyledDocument().setCharacterAttributes(index, palabrasColor.get(i).get(y).length(), set, true);
                    StyleConstants.setForeground(set,Color.black);
                    index = cadena.indexOf(palabrasColor.get(i).get(y), index+1);
                }
            }
        }  
        
    }
    
    public void a√±adirPalabras(){
        jTextPane_Code.setFont(new Font("Verdana", Font.PLAIN, 14));
        //Tipos de datos
        palabras.add("INT"); colores.add(cData);
        palabras.add("STRING"); colores.add(cData);
        palabras.add("BOOLEAN"); colores.add(cData);
        
        //Operadores
        palabras.add("+"); colores.add(cParam);
        palabras.add("="); colores.add(cParam);
        palabras.add("=="); colores.add(cParam);
        palabras.add("<"); colores.add(cParam);
        palabras.add(">"); colores.add(cParam);
        palabras.add("<="); colores.add(cParam);
        palabras.add(">="); colores.add(cParam);
        palabras.add("!="); colores.add(cParam);
        palabras.add("-"); colores.add(cParam);
        palabras.add("&&"); colores.add(cParam);
        palabras.add("||"); colores.add(cParam);
        palabras.add("NOT"); colores.add(cParam);
        
        //Palabras reservadas primarias
        palabras.add("ELSE"); colores.add(cRes);
        palabras.add("IF"); colores.add(cRes);
        palabras.add("LOOP"); colores.add(cRes);
        palabras.add("MAIN"); colores.add(cRes);
        palabras.add("LOOP"); colores.add(cRes);
        palabras.add("BUILD"); colores.add(cRes);
        palabras.add("MAIN"); colores.add(cRes);
        palabras.add("DECLARE"); colores.add(cRes);
        
        //Palabras reservadas secundarias
       palabras.add("FALSE"); colores.add(cRes2);
       palabras.add("TRUE"); colores.add(cRes2);
       palabras.add("MAX"); colores.add(cRes2);
       palabras.add("MIN"); colores.add(cRes2);
       palabras.add("NEW"); colores.add(cRes2);
       
       //Estructuras de datos
       palabras.add("FEATURES"); colores.add(cParam);
       palabras.add("NODE"); colores.add(cParam);
       palabras.add("ARRAYSTRING"); colores.add(cParam);
       palabras.add("GROUP"); colores.add(cParam);
       
       //Funciones
       palabras.add("GENERATEGROUP"); colores.add(cClass);
       palabras.add("GETFEATURES"); colores.add(cClass);
       palabras.add("PRINTGRAPH"); colores.add(cClass);
       palabras.add("PRINTLN"); colores.add(cClass);
       palabras.add("READFEATVAL"); colores.add(cClass);
       palabras.add("READSTRING"); colores.add(cClass);
       palabras.add("GETSIMILITUDE"); colores.add(cClass);

        
    }
            
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FCompiler.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FCompiler.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FCompiler.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FCompiler.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FCompiler().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel appearPanel;
    private javax.swing.JPanel cintaPanel;
    private javax.swing.JPanel cintillaPanel;
    private javax.swing.JPanel compilePanel;
    private javax.swing.JPanel editPanel;
    private javax.swing.JPanel filePanel;
    private javax.swing.JPanel helpPanel;
    private javax.swing.JLabel item1;
    private javax.swing.JLabel item2;
    private javax.swing.JLabel item3;
    private javax.swing.JLabel item4;
    private javax.swing.JLabel item5;
    private javax.swing.JLabel item6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextPane jTextPane_Code;
    private javax.swing.JTextPane jTextPane_Output;
    private javax.swing.JPanel out2Panel;
    private javax.swing.JPanel outPanel;
    private javax.swing.JPanel tituloPanel;
    // End of variables declaration//GEN-END:variables
}
